name: Build and Release Python Whl

on:
  # push:
  #   tags:
  #     - "v*.*.*"
  #     - "v*.*.*-alpha"
  #     - "v*.*.*-alpha.*"
  #     - "v*.*.*-beta"
  #     - "v*.*.*-beta.*"
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag'
        required: true
        default: 'v0.0.0'


jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Set version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        poetry version $VERSION
    - name: Build package
      run: poetry build
    - name: Debug Information
      run: |
        echo "GitHub Repository: ${{ github.repository }}"
        echo "Poetry version:"
        poetry --version
        echo "Poetry configuration:"
        poetry config --list
        echo "Current directory contents:"
        ls -la
        echo "Dist directory contents:"
        ls -la dist/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    - name: Get whl filename
      id: get_filename
      run: |
        WHL_FILE=$(ls ./dist/*.whl | head -n 1)
        WHL_FILENAME=$(basename $WHL_FILE)
        echo "WHL_FILE=${WHL_FILE}" >> $GITHUB_OUTPUT
        echo "WHL_FILENAME=${WHL_FILENAME}" >> $GITHUB_OUTPUT
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_filename.outputs.WHL_FILE }}
        asset_name: ${{ steps.get_filename.outputs.WHL_FILENAME }}
        asset_content_type: application/octet-stream